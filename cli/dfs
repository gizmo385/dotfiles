#!/usr/bin/env bash
set -euo pipefail

# Get the location of the script so we know where to set things up from
SCRIPT_NAME=${BASH_SOURCE[0]}
SCRIPT_DIR=$( cd -- "$( dirname -- "$SCRIPT_NAME" )" &> /dev/null && pwd )

# Create a link to this script in the home dir
if [[ ! -e "$HOME/.dotfiles" ]]; then
    ln -s $SCRIPT_DIR/.. $HOME/.dotfiles
fi

# Files for the venv hashing
REQUIREMENTS_FILE="${SCRIPT_DIR}/requirements.txt"
HASH_FILE="${SCRIPT_DIR}/.requirements_hash"

# Install nix if necessary
NIX_BIN="$HOME/.nix-profile/bin"
if [[ ! -d "$HOME/.nix-profile" ]]; then
    curl -L https://nixos.org/nix/install | sh
    $NIX_BIN/nix-channel --update
fi

. $HOME/.nix-profile/etc/profile.d/nix.sh

# Check if we need to setup the virtual environment
CURRENT_REQUIREMENTS_HASH=$(shasum $REQUIREMENTS_FILE | awk '{print $1}')

if [[ ! -f $SCRIPT_DIR/python-packages.nix ]]; then
    SETUP_REQUIRED=true
elif [[ ! -f $HASH_FILE ]]; then
    SETUP_REQUIRED=true
elif [[ $(cat $HASH_FILE) != $CURRENT_REQUIREMENTS_HASH ]]; then
    SETUP_REQUIRED=true
else
    SETUP_REQUIRED=false
fi

# Install the dependencies for the CLI
if [[ $SETUP_REQUIRED == "true" ]]; then
    echo "Updating dotfile CLI requirements"
    git submodule update --init
    nix-shell pip2nix/release.nix --run "pip2nix3 generate -r ./requirements.txt"
fi

echo $CURRENT_REQUIREMENTS_HASH > $HASH_FILE

# Run the CLI
nix-shell $SCRIPT_DIR/shell.nix --run "python $SCRIPT_DIR/cli.py $*"
